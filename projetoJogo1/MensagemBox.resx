<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctUsuario1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>